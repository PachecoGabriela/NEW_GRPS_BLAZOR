//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using Microsoft.Extensions.Configuration;
namespace GRPS_BLAZOR.Module.BusinessObjects.GRIPS_DBCode.GRIPS_schema
{
    public static class ConnectionHelper
    {
        static Type[] persistentTypes = new Type[] {
            typeof(AustriaReturn),
            typeof(AustriaReturnCell),
            typeof(AustriaReturnLine),
            typeof(BOM),
            typeof(BOMItem),
            typeof(CanadaReturn),
            typeof(CanadaReturnCell),
            typeof(CanadaReturnLine),
            typeof(Company),
            typeof(ComplianceRule),
            typeof(Customer),
            typeof(CustomerAddress),
            typeof(CustomerCon),
            typeof(CustomerGroup),
            typeof(DimCustomer),
            typeof(Dimension),
            typeof(DimItemType),
            typeof(DimMaterial),
            typeof(DimPartType),
            typeof(DimProduct),
            typeof(EnumDomain),
            typeof(EnumInstance),
            typeof(FactPackagingSupplied),
            typeof(FactPrimaryEndOfLife),
            typeof(FactSUPItems),
            typeof(Group),
            typeof(IDASPackTotal),
            typeof(IDASReturn),
            typeof(IDASReturnCell),
            typeof(IDASReturnLine),
            typeof(KPIDATA),
            typeof(KPIDEF),
            typeof(KPIMEMO),
            typeof(MaterialMapping),
            typeof(OpOperator),
            typeof(OpProperty),
            typeof(OpType),
            typeof(PackagingWeight),
            typeof(PackWeight),
            typeof(Part),
            typeof(PartGroup),
            typeof(Period),
            typeof(Product),
            typeof(ProductGroup),
            typeof(ProdWeight),
            typeof(RepakReturn),
            typeof(RepakReturnCell),
            typeof(RepakReturnLine),
            typeof(RepakReturnLineFilter),
            typeof(RuleItem),
            typeof(SalesVolume),
            typeof(Sample),
            typeof(SampleCategory),
            typeof(SampleCoefficient),
            typeof(SampleItem),
            typeof(SamplePackWeight),
            typeof(SRAttribute),
            typeof(Supplier),
            typeof(SupplierAddress),
            typeof(SupplierContact),
            typeof(SupplierGroup),
            typeof(TotalPackWeight),
            typeof(UKReturn),
            typeof(UKReturnCell),
            typeof(UKReturnLine)
        };
        public static Type[] GetPersistentTypes()
        {
            Type[] copy = new Type[persistentTypes.Length];
            Array.Copy(persistentTypes, copy, persistentTypes.Length);
            return copy;
        }
        static Type[] nonPersistentTypes = new Type[] {
            typeof(BOMInserter),
            typeof(BOMItemInserter),
            typeof(FactPackagingSuppliedInserter),
            typeof(FactSales),
            typeof(FactSUPItemsInserter),
            typeof(PackWeightInserter),
            typeof(PartInserter),
            typeof(ProductInserter),
            typeof(SalesViewObject),
            typeof(SalesVolumeInserter),
            typeof(SRAttributeInserter),
            typeof(vwCustomerSales),
            typeof(vwSalesPackWeight),
            typeof(vwSalesSRItems),
            typeof(vwSamplePackWeight)
        };
        public static Type[] GetNonPersistentTypes()
        {
            Type[] copy = new Type[nonPersistentTypes.Length];
            Array.Copy(nonPersistentTypes, copy, nonPersistentTypes.Length);
            return copy;
        }
        public const string ConnectionStringName = "localhostSQLEXPRESSGRIPS_schema";
        public static void Connect(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption, bool threadSafe = false)
        {
            if (threadSafe)
            {
                var provider = GetConnectionProvider(configuration, autoCreateOption);
                var dictionary = new DevExpress.Xpo.Metadata.ReflectionDictionary();
                dictionary.GetDataStoreSchema(persistentTypes);
                dictionary.CollectClassInfos(nonPersistentTypes);
                XpoDefault.DataLayer = new ThreadSafeDataLayer(dictionary, provider);
            }
            else
            {
                XpoDefault.DataLayer = XpoDefault.GetDataLayer(configuration.GetConnectionString(ConnectionStringName), autoCreateOption);
            }
            XpoDefault.Session = null;
        }
        public static DevExpress.Xpo.DB.IDataStore GetConnectionProvider(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption)
        {
            return XpoDefault.GetConnectionProvider(configuration.GetConnectionString(ConnectionStringName), autoCreateOption);
        }
        public static DevExpress.Xpo.DB.IDataStore GetConnectionProvider(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption, out IDisposable[] objectsToDisposeOnDisconnect)
        {
            return XpoDefault.GetConnectionProvider(configuration.GetConnectionString(ConnectionStringName), autoCreateOption, out objectsToDisposeOnDisconnect);
        }
        public static IDataLayer GetDataLayer(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption)
        {
            return XpoDefault.GetDataLayer(configuration.GetConnectionString(ConnectionStringName), autoCreateOption);
        }
    }

}
