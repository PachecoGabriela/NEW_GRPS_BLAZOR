//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using GRPS_BLAZOR.Module.BusinessObjects.Base;
using DevExpress.Persistent.Base;

namespace GRPS_BLAZOR.Module.BusinessObjects.GRIPS_DBCode.GRIPS_schema
{
    [NavigationItem("Calculations")]
    public partial class TotalPackWeight : CustomBaseClass
    {
        Period fActiveFrom;
        [Association(@"TotalPackWeightReferencesPeriod")]
        public Period ActiveFrom
        {
            get { return fActiveFrom; }
            set { SetPropertyValue<Period>(nameof(ActiveFrom), ref fActiveFrom, value); }
        }
        Period fActiveTo;
        [Association(@"TotalPackWeightReferencesPeriod1")]
        public Period ActiveTo
        {
            get { return fActiveTo; }
            set { SetPropertyValue<Period>(nameof(ActiveTo), ref fActiveTo, value); }
        }
        EnumInstance fSource;
        [Association(@"TotalPackWeightReferencesEnumInstance4")]
        public EnumInstance Source
        {
            get { return fSource; }
            set { SetPropertyValue<EnumInstance>(nameof(Source), ref fSource, value); }
        }
        EnumInstance fDestination;
        [Association(@"TotalPackWeightReferencesEnumInstance")]
        public EnumInstance Destination
        {
            get { return fDestination; }
            set { SetPropertyValue<EnumInstance>(nameof(Destination), ref fDestination, value); }
        }
        EnumInstance fMaterialType;
        [Association(@"TotalPackWeightReferencesEnumInstance2")]
        public EnumInstance MaterialType
        {
            get { return fMaterialType; }
            set { SetPropertyValue<EnumInstance>(nameof(MaterialType), ref fMaterialType, value); }
        }
        EnumInstance fPackType;
        [Association(@"TotalPackWeightReferencesEnumInstance3")]
        public EnumInstance PackType
        {
            get { return fPackType; }
            set { SetPropertyValue<EnumInstance>(nameof(PackType), ref fPackType, value); }
        }
        ComplianceRule fCompRule;
        [Association(@"TotalPackWeightReferencesComplianceRule")]
        public ComplianceRule CompRule
        {
            get { return fCompRule; }
            set { SetPropertyValue<ComplianceRule>(nameof(CompRule), ref fCompRule, value); }
        }
        double fTonnes;
        public double Tonnes
        {
            get { return fTonnes; }
            set { SetPropertyValue<double>(nameof(Tonnes), ref fTonnes, value); }
        }
        double fWithSpec;
        public double WithSpec
        {
            get { return fWithSpec; }
            set { SetPropertyValue<double>(nameof(WithSpec), ref fWithSpec, value); }
        }
        EnumInstance fMaterialCategory;
        [Association(@"TotalPackWeightReferencesEnumInstance1")]
        public EnumInstance MaterialCategory
        {
            get { return fMaterialCategory; }
            set { SetPropertyValue<EnumInstance>(nameof(MaterialCategory), ref fMaterialCategory, value); }
        }
        Company fCompany;
        [Association(@"TotalPackWeightReferencesCompany")]
        public Company Company
        {
            get { return fCompany; }
            set { SetPropertyValue<Company>(nameof(Company), ref fCompany, value); }
        }
        EnumInstance fSRAttrName;
        [Association(@"TotalPackWeightReferencesEnumInstance5")]
        public EnumInstance SRAttrName
        {
            get { return fSRAttrName; }
            set { SetPropertyValue<EnumInstance>(nameof(SRAttrName), ref fSRAttrName, value); }
        }
        double fTotalSales;
        public double TotalSales
        {
            get { return fTotalSales; }
            set { SetPropertyValue<double>(nameof(TotalSales), ref fTotalSales, value); }
        }
        EnumInstance fSRReportType;
        [Association(@"TotalPackWeightReferencesEnumInstance6")]
        public EnumInstance SRReportType
        {
            get { return fSRReportType; }
            set { SetPropertyValue<EnumInstance>(nameof(SRReportType), ref fSRReportType, value); }
        }
    }

}
