//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.Persistent.Base;
using GRPS_BLAZOR.Module.BusinessObjects.Base;
using DevExpress.Persistent.Validation;
using DevExpress.ExpressApp.Model;
using DevExpress.ExpressApp;
using DevExpress.Persistent.BaseImpl;

namespace GRPS_BLAZOR.Module.BusinessObjects.GRIPS_DBCode.GRIPS_schema
{
    [NavigationItem("Grips Desktop")]
    [VisibleInReports]
    public partial class SalesVolume : CustomBaseClass
    {
        Period fActiveFrom;
        [Association(@"SalesVolumeReferencesPeriod")]
        public Period ActiveFrom
        {
            get { return fActiveFrom; }
            set { SetPropertyValue<Period>(nameof(ActiveFrom), ref fActiveFrom, value); }
        }
        Period fActiveTo;
        [Association(@"SalesVolumeReferencesPeriod1")]
        public Period ActiveTo
        {
            get { return fActiveTo; }
            set { SetPropertyValue<Period>(nameof(ActiveTo), ref fActiveTo, value); }
        }

        decimal fVolume;
        [System.ComponentModel.DisplayName("Quantity")]
        public decimal Volume
        {
            get { return fVolume; }
            set { SetPropertyValue<decimal>(nameof(Volume), ref fVolume, value); }
        }

        int fVolumeType;
        public int VolumeType
        {
            get { return fVolumeType; }
            set { SetPropertyValue<int>(nameof(VolumeType), ref fVolumeType, value); }
        }
        int fGroupId;
        public int GroupId
        {
            get { return fGroupId; }
            set { SetPropertyValue<int>(nameof(GroupId), ref fGroupId, value); }
        }
        Product fProduct;
        [RuleRequiredField(DefaultContexts.Save)]
        [Association(@"SalesVolumeReferencesProduct")]
        public Product Product
        {
            get { return fProduct; }
            set { SetPropertyValue<Product>(nameof(Product), ref fProduct, value); }
        }
        ComplianceRule fRule;
        [Association(@"SalesVolumeReferencesComplianceRule")]
        public ComplianceRule Rule
        {
            get { return fRule; }
            set { SetPropertyValue<ComplianceRule>(nameof(Rule), ref fRule, value); }
        }
        Customer fCustomer;
        [RuleRequiredField(DefaultContexts.Save)]
        [Association(@"SalesVolumeReferencesCustomer")]
        public Customer Customer
        {
            get { return fCustomer; }
            set { SetPropertyValue<Customer>(nameof(Customer), ref fCustomer, value); }
        }
        BOM fBOM;
        [Association(@"SalesVolumeReferencesBOM")]
        public BOM BOM
        {
            get { return fBOM; }
            set { SetPropertyValue<BOM>(nameof(BOM), ref fBOM, value); }
        }
        decimal fValue;
        public decimal Value
        {
            get { return fValue; }
            set { SetPropertyValue<decimal>(nameof(Value), ref fValue, value); }
        }

        Company fCompany;
        [Browsable(false)]
        [Association(@"SalesVolumeReferencesCompany")]
        public Company Company
        {
            get { return fCompany; }
            set { SetPropertyValue<Company>(nameof(Company), ref fCompany, value); }
        }

        private XPCollection<AuditDataItemPersistent> changeHistory;
        [CollectionOperationSet(AllowAdd = false, AllowRemove = false)]
        public XPCollection<AuditDataItemPersistent> ChangeHistory
        {
            get
            {
                if (changeHistory == null)
                {
                    changeHistory = AuditedObjectWeakReference.GetAuditTrail(Session, this);
                }
                return changeHistory;
            }
        }
    }

}
