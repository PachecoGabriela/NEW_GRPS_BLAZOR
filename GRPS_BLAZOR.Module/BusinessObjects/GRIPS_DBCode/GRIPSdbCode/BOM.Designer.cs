//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using GRPS_BLAZOR.Module.BusinessObjects.Base;
using DevExpress.Persistent.Base;
using DevExpress.ExpressApp.Model;
using DevExpress.ExpressApp;
using DevExpress.Persistent.BaseImpl;

namespace GRPS_BLAZOR.Module.BusinessObjects.GRIPS_DBCode.GRIPS_schema
{
    public partial class BOM : GRIPSObject
    {
        string fName;
        public string Name
        {
            get { return fName; }
            set { SetPropertyValue<string>(nameof(Name), ref fName, value); }
        }
        string fDescription;
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>(nameof(Description), ref fDescription, value); }
        }
        Product fProduct;
        [Association(@"BOMReferencesProduct")]
        public Product Product
        {
            get { return fProduct; }
            set { SetPropertyValue<Product>(nameof(Product), ref fProduct, value); }
        }
        ProdWeight fProductWeight;
        [Association(@"BOMReferencesProdWeight")]
        public ProdWeight ProductWeight
        {
            get { return fProductWeight; }
            set { SetPropertyValue<ProdWeight>(nameof(ProductWeight), ref fProductWeight, value); }
        }

        Period fActiveFrom;
        [Association(@"BOMReferencesPeriod")]
        public Period ActiveFrom
        {
            get { return fActiveFrom; }
            set { SetPropertyValue<Period>(nameof(ActiveFrom), ref fActiveFrom, value); }
        }
        Period fActiveTo;
        [Association(@"BOMReferencesPeriod1")]
        public Period ActiveTo
        {
            get { return fActiveTo; }
            set { SetPropertyValue<Period>(nameof(ActiveTo), ref fActiveTo, value); }
        }
        Company fCompany;
        [Association(@"BOMReferencesCompany")]
        public Company Company
        {
            get { return fCompany; }
            set { SetPropertyValue<Company>(nameof(Company), ref fCompany, value); }
        }
        string fAssemblyCode;
        public string AssemblyCode
        {
            get { return fAssemblyCode; }
            set { SetPropertyValue<string>(nameof(AssemblyCode), ref fAssemblyCode, value); }
        }
        bool fIsAssembly;
        public bool IsAssembly
        {
            get { return fIsAssembly; }
            set { SetPropertyValue<bool>(nameof(IsAssembly), ref fIsAssembly, value); }
        }
        [Association(@"BOMItemReferencesBOM")]
        public XPCollection<BOMItem> BOMItems { get { return GetCollection<BOMItem>(nameof(BOMItems)); } }
        [Association(@"ProductReferencesBOM")]
        public XPCollection<Product> Products { get { return GetCollection<Product>(nameof(Products)); } }
        [Association(@"ProdWeightReferencesBOM")]
        public XPCollection<ProdWeight> ProdWeights { get { return GetCollection<ProdWeight>(nameof(ProdWeights)); } }
        [Association(@"SalesVolumeReferencesBOM")]
        public XPCollection<SalesVolume> SalesVolumes { get { return GetCollection<SalesVolume>(nameof(SalesVolumes)); } }

        private XPCollection<AuditDataItemPersistent> changeHistory;
        [CollectionOperationSet(AllowAdd = false, AllowRemove = false)]
        public XPCollection<AuditDataItemPersistent> ChangeHistory
        {
            get
            {
                if (changeHistory == null)
                {
                    changeHistory = AuditedObjectWeakReference.GetAuditTrail(Session, this);
                }
                return changeHistory;
            }
        }
    }

}
