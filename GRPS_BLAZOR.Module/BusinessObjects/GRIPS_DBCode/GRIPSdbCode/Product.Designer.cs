//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.Persistent.Base;
using GRPS_BLAZOR.Module.BusinessObjects.Base;
using DevExpress.ExpressApp.DC;
using DevExpress.Persistent.Validation;
using DevExpress.ExpressApp.Model;
using DevExpress.ExpressApp;
using DevExpress.Persistent.BaseImpl;

namespace GRPS_BLAZOR.Module.BusinessObjects.GRIPS_DBCode.GRIPS_schema
{
    [VisibleInReports]
    public partial class Product : GRIPSObject
    {
        string fSupplierProdCode;
        public string SupplierProdCode
        {
            get { return fSupplierProdCode; }
            set { SetPropertyValue<string>(nameof(SupplierProdCode), ref fSupplierProdCode, value); }
        }
        string fName;
        [RuleRequiredField(DefaultContexts.Save)]
        public string Name
        {
            get { return fName; }
            set { SetPropertyValue<string>(nameof(Name), ref fName, value); }
        }
        string fDescription;
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>(nameof(Description), ref fDescription, value); }
        }
        int fUnitType;
        public int UnitType
        {
            get { return fUnitType; }
            set { SetPropertyValue<int>(nameof(UnitType), ref fUnitType, value); }
        }
        string fEANCode;
        [XafDisplayName("EAN Code")]
        public string EANCode
        {
            get { return fEANCode; }
            set { SetPropertyValue<string>(nameof(EANCode), ref fEANCode, value); }
        }
        string fTUCCode;
        [XafDisplayName("TUC Code")]
        public string TUCCode
        {
            get { return fTUCCode; }
            set { SetPropertyValue<string>(nameof(TUCCode), ref fTUCCode, value); }
        }
        bool fIsActive;
        public bool IsActive
        {
            get { return fIsActive; }
            set { SetPropertyValue<bool>(nameof(IsActive), ref fIsActive, value); }
        }
        bool fIsImport;
        public bool IsImport
        {
            get { return fIsImport; }
            set { SetPropertyValue<bool>(nameof(IsImport), ref fIsImport, value); }
        }
        Supplier fSupplier;
        [RuleRequiredField(DefaultContexts.Save)]
        [Association(@"ProductReferencesSupplier")]
        public Supplier Supplier
        {
            get { return fSupplier; }
            set { SetPropertyValue<Supplier>(nameof(Supplier), ref fSupplier, value); }
        }
        BOM fActiveBOM;
        [Association(@"ProductReferencesBOM")]
        public BOM ActiveBOM
        {
            get { return fActiveBOM; }
            set { SetPropertyValue<BOM>(nameof(ActiveBOM), ref fActiveBOM, value); }
        }
        ProductGroup fGroup;
        [XafDisplayName("Product Group")]
        [Association(@"ProductReferencesProductGroup")]
        public ProductGroup Group
        {
            get { return fGroup; }
            set { SetPropertyValue<ProductGroup>(nameof(Group), ref fGroup, value); }
        }

        Period fActiveFrom;
        [Association(@"ProductReferencesPeriod")]
        public Period ActiveFrom
        {
            get { return fActiveFrom; }
            set { SetPropertyValue<Period>(nameof(ActiveFrom), ref fActiveFrom, value); }
        }
        Period fActiveTo;
        [Association(@"ProductReferencesPeriod1")]
        public Period ActiveTo
        {
            get { return fActiveTo; }
            set { SetPropertyValue<Period>(nameof(ActiveTo), ref fActiveTo, value); }
        }
        Company fCompany;
        [Association(@"ProductReferencesCompany")]
        public Company Company
        {
            get { return fCompany; }
            set { SetPropertyValue<Company>(nameof(Company), ref fCompany, value); }
        }
        string fOwnBrandName;
        public string OwnBrandName
        {
            get { return fOwnBrandName; }
            set { SetPropertyValue<string>(nameof(OwnBrandName), ref fOwnBrandName, value); }
        }
        [Association(@"BOMReferencesProduct")]
        public XPCollection<BOM> BOMs { get { return GetCollection<BOM>(nameof(BOMs)); } }
        [Association(@"SalesVolumeReferencesProduct")]
        public XPCollection<SalesVolume> SalesVolumes { get { return GetCollection<SalesVolume>(nameof(SalesVolumes)); } }
        [Association(@"SampleItemReferencesProduct")]
        public XPCollection<SampleItem> SampleItems { get { return GetCollection<SampleItem>(nameof(SampleItems)); } }

        private XPCollection<AuditDataItemPersistent> changeHistory;
        [CollectionOperationSet(AllowAdd = false, AllowRemove = false)]
        public XPCollection<AuditDataItemPersistent> ChangeHistory
        {
            get
            {
                if (changeHistory == null)
                {
                    changeHistory = AuditedObjectWeakReference.GetAuditTrail(Session, this);
                }
                return changeHistory;
            }
        }
    }

}
