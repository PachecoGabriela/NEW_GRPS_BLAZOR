@using System.Reactive
@((MarkupString)ComponentModel.DropZone)
<DxUpload Name="@ComponentModel.Name"
          FileUploaded="args => ComponentModel.UploadedSubject.OnNext(Unit.Default)"
          AllowMultiFileUpload="@ComponentModel.AllowMultiFileUpload"
          AllowCancel="@ComponentModel.AllowCancel"
          AllowPause="ComponentModel.AllowPause"
          ShowSelectButton="true"
          ExternalDropZoneCssSelector="#overviewDemoDropZone"
          ExternalDropZoneDragOverCssClass="custom-drag-over border-light text-white"
          UploadUrl="@ComponentModel.UploadUrl"
          SelectedFilesChanged="@SelectedFilesChanged">
</DxUpload>
@code {
    [Parameter]
    public UploadFileModel ComponentModel { get; set; }
    public static RenderFragment Create(UploadFileModel componentModel) =>@<UploadFileComponent ComponentModel=@componentModel />;

    protected void SelectedFilesChanged(IEnumerable<UploadFileInfo> files)
    {
        InvokeAsync(StateHasChanged);
    }
    protected async Task OnFilesUploading(FilesUploadingEventArgs args)
    {
        var file = args.Files[0];
        using var stream = new System.IO.MemoryStream();
        await file.OpenReadStream(file.Size).CopyToAsync(stream);
    }

}